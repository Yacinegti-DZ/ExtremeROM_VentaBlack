version: 2.1

executors:
  ubuntu-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project

parameters:
  target:
    type: string
    default: "r9q"

jobs:
  build:
    executor: ubuntu-executor
    parameters:
      target:
        type: string
    steps:
      - checkout

      - run:
          name: Free up space
          command: |
            sudo apt-get remove -y '^aspnetcore-.*' || echo "Warning: aspnetcore removal failed"
            sudo apt-get remove -y '^dotnet-.*' --fix-missing || echo "Warning: dotnet removal failed"
            sudo apt-get remove -y 'php.*' --fix-missing || echo "Warning: php removal failed"
            sudo apt-get remove -y '^mongodb-.*' --fix-missing || echo "Warning: mongodb removal failed"
            sudo apt-get remove -y '^mysql-.*' --fix-missing || echo "Warning: mysql removal failed"
            sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell libgl1-mesa-dri --fix-missing || echo "Warning: misc removal failed"
            sudo apt-get remove -y google-cloud-sdk --fix-missing || echo "Debug: gcloud-sdk removal failed"
            sudo apt-get remove -y google-cloud-cli --fix-missing || echo "Debug: gcloud-cli removal failed"
            sudo apt-get autoremove -y || echo "Warning: autoremove failed"
            sudo apt-get clean || echo "Warning: clean failed"

      - run:
          name: Free disk space (2/3)
          command: echo "Simulating jlumbroso/free-disk-space@main"

      - run:
          name: Free disk space (3/3)
          command: echo "Simulating rokibhasansagar/slimhub_actions@main"

      - run:
          name: Set up build environment
          command: |
            sudo apt update
            DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
              jq attr ccache clang ffmpeg golang \
              libbrotli-dev libgtest-dev libprotobuf-dev libunwind-dev libpcre2-dev \
              libzstd-dev linux-modules-extra-$(uname -r) lld protobuf-compiler webp \
              curl xxd patchelf flex bison libarchive-tools build-essential
            sudo modprobe erofs f2fs
            git config --global user.name "circleci"
            git config --global user.email "circleci@localhost"

      - run:
          name: Set up JDK 11
          command: |
            sudo apt install -y openjdk-11-jdk
            export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
            export PATH=$JAVA_HOME/bin:$PATH

      - run:
          name: Set up Node.js
          command: |
            curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
            sudo apt-get install -y nodejs

      - run:
          name: Build dependencies
          command: source ./buildenv.sh << parameters.target >>

      - run:
          name: Download source firmware
          command: |
            source ./buildenv.sh << parameters.target >>
            TARGET_FIRMWARE="$SOURCE_FIRMWARE" ./scripts/download_fw.sh --force

      - run:
          name: Extract source firmware
          command: |
            source ./buildenv.sh << parameters.target >>
            TARGET_FIRMWARE="$SOURCE_FIRMWARE" ./scripts/extract_fw.sh --force

      - run:
          name: Download target firmware
          command: |
            source ./buildenv.sh << parameters.target >>
            SOURCE_FIRMWARE="$TARGET_FIRMWARE" ./scripts/download_fw.sh --force

      - run:
          name: Extract target firmware
          command: |
            source ./buildenv.sh << parameters.target >>
            SOURCE_FIRMWARE="$TARGET_FIRMWARE" ./scripts/extract_fw.sh --force

      - run:
          name: Cleanup out/odin and leave placeholder
          command: |
            rm -rf out/odin/SM-S938B_EUX
            mkdir -p out/odin/SM-S938B_EUX
            touch out/odin/SM-S938B_EUX/.downloaded

      - run:
          name: Build ROM
          command: |
            source ./buildenv.sh << parameters.target >>
            ./scripts/make_rom.sh --force

      - store_artifacts:
          path: out
          destination: rom_output

workflows:
  build_extremerom:
    jobs:
      - build:
          matrix:
            parameters:
              target: ["r9q", "r9q2"]

